{
  "name": "matters-web",
  "version": "2.1.0",
  "description": "codebase of Matters' website",
  "author": "",
  "engines": {
    "node": ">=10.15.0",
    "npm": ">=6.5.0"
  },
  "license": "ISC",
  "scripts": {
    "dev": "npm-run-all --parallel nodemon gen:watch",
    "nodemon": "nodemon",
    "test": "jest",
    "build:next": "next build",
    "build:server": "tsc --project tsconfig.server.json",
    "build": "npm run gen:clean && npm run gen:type && npm run build:next && npm run build:server",
    "start": "NODE_ENV=production node build/production-server/server.js",
    "export": "npm run build && next export -o static-site-build",
    "format": "prettier --write \"{,!(build|static-site-build|node_modules|coverage)/**/!(__generated__)/}*.{js,jsx,ts,tsx,json}\"",
    "format:check": "npm run format -- --list-different",
    "lint": "npm run typecheck && tslint -p .",
    "lint:fix": "tslint -p . --fix",
    "typecheck": "tsc --project tsconfig.json --noEmit",
    "analyze": "BUNDLE_ANALYZE=both next build",
    "analyze:server": "BUNDLE_ANALYZE=server next build",
    "analyze:browser": "BUNDLE_ANALYZE=browser next build",
    "gen:type": "apollo client:codegen __generated__ --target=typescript --config apollo.config.js",
    "gen:watch": "npm run gen:clean && npm run gen:type -- --watch",
    "gen:clean": "find . | grep -E '__generated__' | xargs rm -rf",
    "gen:fragmentTypes": "node bin/buildFragmentTypes.js"
  },
  "dependencies": {
    "@matters/apollo-upload-client": "^11.1.0",
    "@sentry/browser": "^5.7.1",
    "@tippy.js/react": "^3.1.0",
    "@types/jump.js": "^1.0.2",
    "apollo-cache-inmemory": "^1.6.3",
    "apollo-cache-persist": "^0.1.1",
    "apollo-client": "^2.6.4",
    "apollo-link": "^1.2.13",
    "apollo-link-context": "^1.0.19",
    "apollo-link-error": "^1.1.12",
    "apollo-link-persisted-queries": "^0.2.2",
    "apollo-link-ws": "^1.0.19",
    "apollo-utilities": "^1.3.2",
    "body-scroll-lock": "^2.6.4",
    "classnames": "^2.2.6",
    "date-fns": "^2.5.0",
    "express": "^4.17.1",
    "formik": "^1.5.8",
    "graphql": "^14.5.8",
    "graphql-tag": "^2.10.1",
    "helmet": "^3.21.1",
    "isomorphic-unfetch": "^3.0.0",
    "jump.js": "^1.0.2",
    "lodash": "^4.17.15",
    "module-alias": "^2.2.2",
    "next": "^9.1.1",
    "next-with-apollo": "^4.3.0",
    "nprogress": "^0.2.0",
    "query-string": "^6.8.3",
    "react": "^16.10.2",
    "react-apollo": "^3.1.2",
    "react-beautiful-dnd": "^11.0.5",
    "react-content-loader": "^4.3.2",
    "react-dom": "^16.10.2",
    "react-quill": "^1.3.3",
    "react-responsive": "^8.0.1",
    "react-waypoint": "^9.0.2",
    "subscriptions-transport-ws": "^0.9.16",
    "use-debounce": "^3.1.0",
    "validator": "^11.1.0"
  },
  "devDependencies": {
    "@apollo/react-testing": "3.1.2",
    "@testing-library/react": "^8.0.9",
    "@types/body-scroll-lock": "^2.6.1",
    "@types/classnames": "^2.2.9",
    "@types/dotenv": "^6.1.1",
    "@types/express": "^4.17.1",
    "@types/helmet": "0.0.44",
    "@types/jest": "^24.0.19",
    "@types/lodash": "^4.14.144",
    "@types/next-server": "^8.1.2",
    "@types/nprogress": "0.2.0",
    "@types/quill": "^2.0.3",
    "@types/react": "^16.9.9",
    "@types/react-beautiful-dnd": "^11.0.3",
    "@types/react-dom": "^16.9.2",
    "@types/react-responsive": "^8.0.1",
    "@types/segment-analytics": "0.0.32",
    "@types/styled-jsx": "^2.2.8",
    "@types/validator": "^10.11.3",
    "@zeit/next-bundle-analyzer": "^0.1.2",
    "apollo": "^2.19.1",
    "babel-jest": "^24.9.0",
    "babel-plugin-dynamic-import-node": "^2.3.0",
    "babel-plugin-module-resolver": "^3.2.0",
    "babel-polyfill": "^6.26.0",
    "dotenv": "^8.2.0",
    "husky": "^3.0.9",
    "identity-obj-proxy": "^3.0.0",
    "imagemin-mozjpeg": "^8.0.0",
    "imagemin-optipng": "^7.1.0",
    "imagemin-svgo": "^7.0.0",
    "jest": "^24.9.0",
    "lost": "^8.3.1",
    "next-compose-plugins": "^2.2.0",
    "next-offline": "^4.0.6",
    "next-optimized-images": "^2.5.3",
    "nodemon": "^1.19.4",
    "npm-run-all": "^4.1.5",
    "postcss-calc": "^7.0.1",
    "postcss-color-function": "^4.1.0",
    "postcss-conditionals": "^2.1.0",
    "postcss-each": "^0.10.0",
    "postcss-mixins": "^6.2.2",
    "postcss-preset-env": "^6.7.0",
    "prettier": "^1.18.2",
    "styled-jsx-plugin-postcss": "^2.0.1",
    "svg-sprite-loader": "4.1.3",
    "ts-jest": "^24.1.0",
    "ts-node": "^8.4.1",
    "tslint": "^5.20.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-react": "^4.1.0",
    "tslint-react-hooks": "^2.2.1",
    "typescript": "^3.6.4"
  },
  "_moduleAliases": {
    "~": "./build/production-server"
  },
  "nodemonConfig": {
    "watch": [
      "src/server.ts",
      "src/common/enums.ts",
      "src/common/styles/variables/*.css",
      "postcss.config.js",
      "next.config.js"
    ],
    "env": {
      "NODE_ENV": "development",
      "BABEL_DISABLE_CACHE": 1
    },
    "exec": "npm run build:server && node build/production-server/server.js"
  },
  "prettier": {
    "singleQuote": true,
    "semi": false
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run format && npm run lint"
    }
  },
  "jest": {
    "setupFiles": [
      "<rootDir>/jest.setup.js"
    ],
    "preset": "ts-jest/presets/js-with-ts",
    "transform": {
      "^.+\\.tsx?$": "ts-jest",
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga|xml)$": "<rootDir>/__mocks__/assetsTransformer.js"
    },
    "testMatch": [
      "**/__tests__/*.(ts|tsx)",
      "**/*.test.(ts|tsx)"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/build/",
      "<rootDir>/bin/",
      "<rootDir>/static/"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "moduleNameMapper": {
      "^.+\\.(gif|png|jpg|ttf|eot)\\?(resize|sizes)(.+)?$": "<rootDir>/__mocks__/fileResizeMock.js",
      "^.+\\.(gif|png|jpg|ttf|eot)(\\?.+)?$": "<rootDir>/__mocks__/fileMock.js",
      "^.+\\.svg(\\?.+)?$": "<rootDir>/__mocks__/svgMock.js",
      "\\.css$": "<rootDir>/__mocks__/styleMock.js",
      "~/static/(.*)$": "<rootDir>/public/static/$1",
      "~/(.*)$": "<rootDir>/src/$1"
    },
    "coverageDirectory": "<rootDir>/coverage/",
    "collectCoverage": true,
    "globals": {
      "ts-jest": {
        "babelConfig": {
          "plugins": [
            "dynamic-import-node"
          ],
          "presets": [
            [
              "next/babel"
            ]
          ]
        },
        "tsConfig": "<rootDir>/tsconfig.json",
        "diagnostics": false
      }
    }
  }
}
