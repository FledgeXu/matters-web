name: Deployment

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - '*'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MATTERS_SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12.16'

      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: |
          npm run gen:clean \
          && npm run gen:type \
          && npm run lint \
          && npm run format:check

      # - name: Test
      #   run: npm install codecov -g && npm run test && codecov
      #   env:
      #     CODECOV_TOKEN: f109cbf6-b6c7-4a08-ad03-981bc4cd1fe8
      #     MATTERS_ENV: test
      #     API_URL: http://matters-server-develop.ap-southeast-1.elasticbeanstalk.com/graphql

      # - name: Test - BDD

      # === `develop` branch ===
      - name: Build (devlop)
        if: github.ref == 'refs/heads/develop' || github.base_ref == 'develop'
        run: cp .env.dev .env && npm run build

      # === `master` branch ===
      - name: Build (production)
        if: github.ref == 'refs/heads/master' || github.base_ref == 'master'
        run: cp .env.prod .env && npm run build

      - uses: actions/upload-artifact@v2
        with:
          name: next.js artifacts
          path: .next

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - uses: actions/download-artifact@master
        with:
          name: next.js artifacts
          path: .next

      - name: Setup AWS
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # === `develop` branch ===
      - name: Upload Assets (devlop)
        if: github.ref == 'refs/heads/develop'
        run: |
          aws s3 sync .next s3://web-develop.matters.news/_next

      - name: Deploy - eb init (develop)
        if: github.ref == 'refs/heads/develop'
        uses: hmanzur/actions-aws-eb@v1.0.0
        with:
          command: 'init matters-stage --region ap-southeast-1'

      - name: Deploy - mv .ebextensions (develop)
        if: github.ref == 'refs/heads/develop'
        run: |
          cp .ebextensions/http-basic-auth.config.dev .ebextensions/http-basic-auth.config

      - name: Deploy - eb deploy (develop)
        if: github.ref == 'refs/heads/develop'
        uses: hmanzur/actions-aws-eb@v1.0.0
        with:
          command: 'deploy matters-client-web-develop'

      # === `master` branch ===
      - name: Upload Assets (production)
        if: github.ref == 'refs/heads/master'
        run: |
          aws s3 sync .next s3://matters.news/_next

      - name: Deploy - eb init (production)
        if: github.ref == 'refs/heads/master'
        uses: hmanzur/actions-aws-eb@v1.0.0
        with:
          command: 'init matters-prod --region ap-southeast-1'

      - name: Deploy - eb deploy (production)
        if: github.ref == 'refs/heads/master'
        uses: hmanzur/actions-aws-eb@v1.0.0
        with:
          command: 'deploy matters-client-web-prod'

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: matters-web
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
